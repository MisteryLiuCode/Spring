<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
<!--    1.配置Monster对象
        2.在beans中可以配置多个bean
        3.bean就是一个java对象
        4.class属性用于指定类的全路径->底层使用反射创建
        5.id属性表示该java对象在spring中容器中的id,通过id可以获取到该对象
-->
<!--    <bean class="com.liu.spring.bean.Monster" id="monster01">-->
<!--&lt;!&ndash;        配置属性&ndash;&gt;-->
<!--        <property name="monsterId" value="100"/>-->
<!--        <property name="name" value="牛魔王"/>-->
<!--        <property name="skill" value="芭蕉扇"/>-->
<!--    </bean>-->

<!--    配置一个bean,通过类型获取,不分配id,默认会分配id-->
<!--        <bean class="com.liu.spring.bean.Monster">-->
<!--    &lt;!&ndash;        配置属性&ndash;&gt;-->
<!--            <property name="monsterId" value="100"/>-->
<!--            <property name="name" value="牛魔王"/>-->
<!--            <property name="skill" value="芭蕉扇"/>-->
<!--        </bean>-->

<!--    配置monster对象,并且指定构造器-->
<!--            <bean class="com.liu.spring.bean.Monster">-->
<!--        &lt;!&ndash;        通过构造器配置属性,通过下标指定参数&ndash;&gt;-->
<!--                <constructor-arg value="200" index="0"/>-->
<!--                <constructor-arg value="白骨精" index="1"/>-->
<!--                <constructor-arg value="吸人血" index="2"/>-->
<!--            </bean>-->

<!--    通过构造器配置属性，通过参数类型指定参数-->
<!--    <bean class="com.liu.spring.bean.Monster">-->
<!--        &lt;!&ndash;        通过构造器配置属性,通过下标指定参数&ndash;&gt;-->
<!--        <constructor-arg value="200" type="java.lang.Integer"/>-->
<!--        <constructor-arg value="白骨精" type="java.lang.String"/>-->
<!--        <constructor-arg value="吸人血" type="java.lang.String"/>-->
<!--    </bean>-->





<!--    通过p名称空间配置bean-->
<!--        <bean id="monster" class="com.liu.spring.bean.Monster"-->
<!--            &lt;!&ndash;        通过构造器配置属性,通过下标指定参数&ndash;&gt;-->
<!--            p:monsterId="500"-->
<!--            p:name="红孩儿"-->
<!--            p:skill="吐火"-->
<!--        />-->


<!--&lt;!&ndash;   测试Di注入&ndash;&gt;-->
<!--            <bean class="com.liu.spring.di.DiDao" id="diDao"/>-->
<!--            <bean class="com.liu.spring.di.DiImpl" id="diImpl">-->
<!--                <property name="diDao" ref="diDao"/>-->
<!--            </bean>-->

<!--    演示配置House对象,演示整个bean的生命周期-->
<!--    可以配置初始化是哪个方法,销毁是用哪个方法-->
<!--    init-method="init" 指定bean的初始化方法,在setter方法后执行-->
<!--    destroy-method="destroy" 指定bean的销毁方法,在容器关闭的时候执行-->
    <bean class="com.liu.spring.bean.House" id="house" init-method="init" destroy-method="destroy">
        <property name="name" value="北京豪宅"/>
    </bean>
</beans>